{"version":3,"sources":["configs/axiosConfig.js","components/profile/store/actions/profileActions.js","components/question-page/store/actions/questionActions.js","store/index.js","components/question-page/store/reducers/questionReducer.js","components/question-page/store/reducers/index.js","components/profile/store/reducers/profileReducer.js","components/profile/store/reducers/index.js","components/splashScreen/SplashScreen.js","App.js","reportWebVitals.js","index.js"],"names":["axiosConfig","axios","create","baseURL","GET_USER","GET_USER_TAGS","GET_USER_QUESTIONS","getUser","params","request","get","userId","dispatch","then","response","type","payload","data","getUserTags","getUserQuestions","GET_QUESTIONS","getQuestions","asyncReducers","initialState","featuredQuestions","questions","state","action","Actions","questionReducers","combineReducers","question","userData","userTags","userQuestions","userProfile","user","enhancer","applyMiddleware","thunk","store","createStore","profile","SplashScreen","id","className","Login","React","lazy","Questions","Profile","App","Suspense","fallback","exact","path","render","to","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"qIAAA,YAEMA,EAFN,OAEoBC,EAAMC,OAAO,CAC7BC,QAAS,kCAGEH,O,wPCJFI,EAAW,WACXC,EAAgB,gBAChBC,EAAqB,qBAErBC,EAAU,SAACC,GACpB,IAAMC,EAAUR,IAAMS,IAAI,cAAgBF,EAAOG,OAAS,uBAE1D,OAAO,SAAAC,GAAQ,OACXH,EAAQI,MAAK,SAAAC,GACT,OAAOF,EAAS,CACZG,KAAMX,EACNY,QAASF,EAASG,YAKrBC,EAAc,SAACV,GACxB,IAAMC,EAAUR,IAAMS,IAAI,cAAgBF,EAAOG,OAAS,4BAE1D,OAAO,SAAAC,GAAQ,OACXH,EAAQI,MAAK,SAAAC,GACT,OAAOF,EAAS,CACZG,KAAMV,EACNW,QAASF,EAASG,YAKrBE,EAAmB,SAACX,GAC7B,IAAMC,EAAUR,IAAMS,IAAI,cAAgBF,EAAOG,OAAS,iCAE1D,OAAO,SAAAC,GAAQ,OACXH,EAAQI,MAAK,SAAAC,GACT,OAAOF,EAAS,CACZG,KAAMT,EACNU,QAASF,EAASG,a,gHCnCrBG,EAAgB,gBAEhBC,EAAe,WACxB,IAAMZ,EAAUR,IAAMS,IAAI,8CAE1B,OAAO,SAAAE,GAAQ,OACXH,EAAQI,MAAK,SAAAC,GACT,OAAOF,EAAS,CACZG,KAAMK,EACNJ,QAASF,EAASG,a,kJCLZK,E,4FCJhBC,EAAe,CACjBC,kBAAmB,MAiBRC,EAdG,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAChD,OAAQA,EAAOZ,MACX,KAAKa,IACD,OAAO,2BACAL,GADP,IAEIC,kBAAmBG,EAAOX,UAGlC,QACI,OAAOU,ICRJG,EAJUC,YAAgB,CACrCC,a,QCFER,EAAe,CACjBS,SAAU,KACVC,SAAU,KACVC,cAAe,MA6BJC,EA1BK,WAAmC,IAAlCT,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOZ,MACX,KAAKa,IACD,OAAO,2BACAF,GADP,IAEIM,SAAUL,EAAOX,UAGzB,KAAKY,IACD,OAAO,2BACAF,GADP,IAEIO,SAAUN,EAAOX,UAGzB,KAAKY,IACD,OAAO,2BACAF,GADP,IAEIQ,cAAeP,EAAOX,UAG9B,QACI,OAAOU,ICtBJG,EAJUC,YAAgB,CACrCM,SJSEC,EAAWC,YAAgBC,KAIlBC,EAFDC,YARVX,YAAgB,aACZL,YACAiB,WACGpB,IAKgCe,G,eKqB5BM,EAjCM,WACjB,OACI,mCACI,qBAAKC,GAAG,gBAAR,SAEI,qBAAKC,UAAU,SAAf,SAMI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,QACf,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,kBAEnB,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,gCCf7CC,EAAQC,IAAMC,MAAK,kBAAM,8DACzBC,EAAYF,IAAMC,MAAK,kBAAM,uDAC7BE,EAAUH,IAAMC,MAAK,kBAAM,uDA4BlBG,MA1Bf,WACE,OACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,qBAAKK,UAAU,MAAf,SACE,cAAC,IAAMO,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OACE,cAAC,IAAD,CAAUC,GAAG,cAKnB,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASG,UAAWZ,IACtC,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,aAAaG,UAAWT,IAC1C,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,wBAAwBG,UAAWR,cCjBlDS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCCDO,EAAUC,cAEvBC,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,CAAeH,QAASA,EAAxB,SACE,cAAC,EAAD,QAGJI,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f2dc122.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosConfig = axios.create({\r\n    baseURL: 'https://api.stackexchange.com',\r\n});\r\n\r\nexport default axiosConfig;\r\n","import axios from '../../../../configs/axiosConfig';\r\n\r\nexport const GET_USER = 'GET USER';\r\nexport const GET_USER_TAGS = 'GET USER TAGS';\r\nexport const GET_USER_QUESTIONS = 'GET USER QUESTIONS';\r\n\r\nexport const getUser = (params) => {\r\n    const request = axios.get('/2.2/users/' + params.userId + '?site=stackoverflow');\r\n\r\n    return dispatch =>\r\n        request.then(response => {\r\n            return dispatch({\r\n                type: GET_USER,\r\n                payload: response.data\r\n            });\r\n        });\r\n}\r\n\r\nexport const getUserTags = (params) => {\r\n    const request = axios.get('/2.2/users/' + params.userId + '/tags?site=stackoverflow');\r\n\r\n    return dispatch =>\r\n        request.then(response => {\r\n            return dispatch({\r\n                type: GET_USER_TAGS,\r\n                payload: response.data\r\n            });\r\n        });\r\n}\r\n\r\nexport const getUserQuestions = (params) => {\r\n    const request = axios.get('/2.2/users/' + params.userId + '/questions?site=stackoverflow');\r\n\r\n    return dispatch =>\r\n        request.then(response => {\r\n            return dispatch({\r\n                type: GET_USER_QUESTIONS,\r\n                payload: response.data\r\n            });\r\n        });\r\n}","import axios from '../../../../configs/axiosConfig';\r\n\r\nexport const GET_QUESTIONS = 'GET QUESTIONS';\r\n\r\nexport const getQuestions = () => {\r\n    const request = axios.get('/2.2/questions/featured?site=stackoverflow');\r\n\r\n    return dispatch =>\r\n        request.then(response => {\r\n            return dispatch({\r\n                type: GET_QUESTIONS,\r\n                payload: response.data\r\n            });\r\n        });\r\n}","import { applyMiddleware, createStore } from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport questions from '../components/question-page/store/reducers';\r\nimport profile from '../components/profile/store/reducers';\r\n\r\nconst createReducer = asyncReducers =>\r\n    combineReducers({\r\n        questions,\r\n        profile,\r\n        ...asyncReducers\r\n    });\r\n\r\nconst enhancer = applyMiddleware(thunk);\r\n\r\nconst store = createStore(createReducer(), enhancer);\r\n\r\nexport default store;","import * as Actions from '../actions';\r\n\r\nconst initialState = {\r\n    featuredQuestions: null\r\n};\r\n\r\nconst questions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.GET_QUESTIONS: {\r\n            return {\r\n                ...initialState,\r\n                featuredQuestions: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default questions;","import { combineReducers } from 'redux';\r\nimport question from './questionReducer';\r\n\r\nconst questionReducers = combineReducers({\r\n    question\r\n});\r\n\r\nexport default questionReducers;","import * as Actions from '../actions';\r\n\r\nconst initialState = {\r\n    userData: null,\r\n    userTags: null,\r\n    userQuestions: null\r\n};\r\n\r\nconst userProfile = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Actions.GET_USER: {\r\n            return {\r\n                ...state,\r\n                userData: action.payload\r\n            };\r\n        }\r\n        case Actions.GET_USER_TAGS: {\r\n            return {\r\n                ...state,\r\n                userTags: action.payload\r\n            };\r\n        }\r\n        case Actions.GET_USER_QUESTIONS: {\r\n            return {\r\n                ...state,\r\n                userQuestions: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default userProfile;","import { combineReducers } from 'redux';\r\nimport user from './profileReducer';\r\n\r\nconst questionReducers = combineReducers({\r\n    user\r\n});\r\n\r\nexport default questionReducers;","import React from 'react';\r\nimport './splashScreen.css';\r\n\r\nconst SplashScreen = () => {\r\n    return (\r\n        <>\r\n            <div id=\"splash-screen\">\r\n\r\n                <div className=\"center\">\r\n\r\n                    {/* <div className=\"logo\">\r\n                        <img width=\"128\" src={logo} alt=\"logo\" />\r\n                    </div> */}\r\n\r\n                    <div className=\"spinner-wrapper\">\r\n                        <div className=\"spinner\">\r\n                            <div className=\"inner\">\r\n                                <div className=\"gap\"></div>\r\n                                <div className=\"left\">\r\n                                    <div className=\"half-circle\"></div>\r\n                                </div>\r\n                                <div className=\"right\">\r\n                                    <div className=\"half-circle\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SplashScreen","import React from 'react';\nimport './App.css';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport SplashScreen from './components/splashScreen/SplashScreen'\n\nconst Login = React.lazy(() => import('./components/login/Login'));\nconst Questions = React.lazy(() => import('./components/question-page/Questions'));\nconst Profile = React.lazy(() => import('./components/profile/Profile'));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <React.Suspense fallback={<SplashScreen />}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => {\n                return (\n                  <Redirect to=\"/login\" />\n                )\n              }}\n            />\n\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/questions\" component={Questions} />\n            <Route exact path=\"/user-profile/:userId\" component={Profile} />\n          </Switch>\n        </React.Suspense>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter history={history}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}