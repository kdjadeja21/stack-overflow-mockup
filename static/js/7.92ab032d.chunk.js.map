{"version":3,"sources":["components/login/Login.js"],"names":["validationSchema","yup","email","required","password","min","Login","props","formik","useFormik","initialValues","onSubmit","values","history","push","className","handleSubmit","id","name","label","autoFocus","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","variant"],"mappings":"sIAAA,oEAOMA,EAAmBC,IAAW,CAChCC,MAAOD,IACK,oBACPC,MAAM,uBACNC,SAAS,qBACdC,SAAUH,IACE,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAiDHG,UA9CD,SAACC,GACX,IAAMC,EAASC,YAAU,CACrBC,cAAe,CACXR,MAAO,GACPE,SAAU,IAEdJ,iBAAkBA,EAClBW,SAAU,SAACC,GACPL,EAAMM,QAAQC,KAAK,iBAG3B,OACI,qBAAKC,UAAU,QAAf,SACI,cAAC,IAAD,CAAMA,UAAU,aAAhB,SACI,uBAAMJ,SAAUH,EAAOQ,aAAvB,UACI,cAAC,IAAD,CACID,UAAU,cACVE,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,WAAS,EACTC,MAAOb,EAAOI,OAAOV,MACrBoB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQvB,OAASwB,QAAQlB,EAAOmB,OAAOzB,OACrD0B,WAAYpB,EAAOiB,QAAQvB,OAASM,EAAOmB,OAAOzB,QACpD,uBACF,cAAC,IAAD,CACIa,UAAU,cACVE,GAAG,WACHC,KAAK,WACLC,MAAM,WACNU,KAAK,WACLR,MAAOb,EAAOI,OAAOR,SACrBkB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQrB,UAAYsB,QAAQlB,EAAOmB,OAAOvB,UACxDwB,WAAYpB,EAAOiB,QAAQrB,UAAYI,EAAOmB,OAAOvB,WACvD,uBACF,cAAC,IAAD,CAAQW,UAAU,MAAMe,MAAM,UAAUC,QAAQ,YAAYF,KAAK,SAAjE","file":"static/js/7.92ab032d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n});\r\n\r\nconst Login = (props) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            props.history.push('/questions')\r\n        },\r\n    });\r\n    return (\r\n        <div className='login'>\r\n            <Card className='login-card'>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        className='input-field'\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        autoFocus\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    /><br />\r\n                    <TextField\r\n                        className='input-field'\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    /><br />\r\n                    <Button className='m-1' color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}